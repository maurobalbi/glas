2023-06-04T17:15:41.127621Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":86286,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T17:15:41.128841Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T17:15:41.130063Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T17:15:41.130407Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T17:15:46.272521Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:15:46.272749Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R14    
2023-06-04T17:15:46.272892Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:15:47.316199Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:15:47.316406Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R16    
2023-06-04T17:15:47.316485Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:15:47.577700Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:15:47.577849Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R18    
2023-06-04T17:15:47.577905Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:15:53.303194Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:15:53.303618Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R20    
2023-06-04T17:15:53.303693Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:15:53.378990Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:15:53.379130Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R22    
2023-06-04T17:15:53.379179Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:15:54.776205Z  INFO gleamalyzer::server: Saving document
2023-06-04T17:17:02.264737Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":86575,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T17:17:02.266396Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T17:17:02.267903Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T17:17:02.268280Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T17:17:04.469584Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:17:04.469753Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R14    
2023-06-04T17:17:04.469882Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:17:05.121799Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:17:05.121966Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R16    
2023-06-04T17:17:05.122019Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:17:05.498597Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:17:05.498785Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R18    
2023-06-04T17:17:05.498855Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:17:05.964605Z  INFO gleamalyzer::server: Saving document
2023-06-04T17:18:04.515974Z  INFO gleamalyzer::server: Saving document
2023-06-04T17:18:05.938388Z  INFO gleamalyzer::server: Saving document
2023-06-04T17:18:20.771137Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:18:20.771411Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R20    
2023-06-04T17:18:20.771482Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:18:20.875022Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:18:20.875167Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R22    
2023-06-04T17:18:20.875216Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:18:21.273358Z  INFO gleamalyzer::server: Saving document
2023-06-04T17:19:09.874794Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":86779,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T17:19:09.876266Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T17:19:09.877726Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T17:19:09.878034Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T17:19:12.105619Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:19:12.105958Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R14    
2023-06-04T17:19:12.106129Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:19:12.778460Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:19:12.778653Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R16    
2023-06-04T17:19:12.778730Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:19:13.140115Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:19:13.140206Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R18    
2023-06-04T17:19:13.140239Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:31:44.662196Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":87401,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T17:31:44.663769Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T17:31:44.665337Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T17:31:44.665709Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T17:31:45.747891Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:31:45.748084Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R14    
2023-06-04T17:31:45.748169Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:31:46.236334Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:31:46.236563Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R16    
2023-06-04T17:31:46.236640Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:31:46.477093Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:31:46.477261Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R18    
2023-06-04T17:31:46.477327Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:31:49.397352Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R18    
2023-06-04T17:31:49.397472Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R18    
2023-06-04T17:31:49.397594Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R18    
2023-06-04T17:31:49.397685Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T17:31:49.397717Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R18    
2023-06-04T17:31:49.397743Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T17:31:49.397764Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R18    
2023-06-04T17:31:49.397782Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R18    
2023-06-04T17:31:54.018560Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R18    
2023-06-04T17:31:54.018709Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R18    
2023-06-04T17:31:54.018814Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R18    
2023-06-04T17:31:54.018834Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R18    
2023-06-04T17:31:56.554971Z  INFO gleamalyzer::server: Saving document
2023-06-04T17:31:58.936804Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R18    
2023-06-04T17:31:58.936906Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R18    
2023-06-04T17:31:58.937012Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R18    
2023-06-04T17:31:58.937036Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R18    
2023-06-04T17:32:41.752208Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R18    
2023-06-04T17:32:41.753179Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R18    
2023-06-04T17:32:41.753305Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R18    
2023-06-04T17:32:41.753335Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R18    
2023-06-04T17:32:46.584187Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R18    
2023-06-04T17:32:46.584295Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R18    
2023-06-04T17:32:46.584408Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R18    
2023-06-04T17:32:46.584435Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R18    
2023-06-04T17:40:55.639170Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":88084,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T17:40:55.641280Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T17:40:55.642883Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T17:40:55.643251Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T17:41:11.298363Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T17:41:11.299385Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:41:11.300809Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T17:41:11.300898Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T17:41:11.300935Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T17:41:11.300972Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T17:41:11.301016Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T17:41:11.301036Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T17:41:43.942809Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":88234,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T17:41:43.944872Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T17:41:43.948759Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T17:41:43.949172Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T17:41:44.482797Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:41:44.483029Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R14    
2023-06-04T17:41:44.483178Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:41:44.884299Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:41:44.884422Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R16    
2023-06-04T17:41:44.884466Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:41:45.087182Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:41:45.087298Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R18    
2023-06-04T17:41:45.087343Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:41:47.343905Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R18    
2023-06-04T17:41:47.344029Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R18    
2023-06-04T17:41:47.344156Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R18    
2023-06-04T17:41:47.344233Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T17:41:47.344271Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R18    
2023-06-04T17:41:47.344307Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T17:41:47.344331Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R18    
2023-06-04T17:41:47.344352Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R18    
2023-06-04T17:42:01.243690Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R24    
2023-06-04T17:42:01.243819Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): validated old memoized value    
2023-06-04T17:42:01.243945Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R24    
2023-06-04T17:42:01.244050Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): validated old memoized value    
2023-06-04T17:42:01.244081Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): validated old memoized value    
2023-06-04T17:47:03.897141Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":89514,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T17:47:03.898813Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T17:47:03.900986Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T17:47:03.901524Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T17:47:07.868045Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:47:07.868288Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R14    
2023-06-04T17:47:07.868435Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:47:08.599420Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:47:08.599592Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R16    
2023-06-04T17:47:08.599655Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:47:08.676992Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:47:08.677104Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R18    
2023-06-04T17:47:08.677147Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:47:09.017184Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:47:09.017327Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R20    
2023-06-04T17:47:09.017375Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:47:09.132886Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:47:09.133000Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R22    
2023-06-04T17:47:09.133035Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:47:09.308012Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:47:09.308122Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R24    
2023-06-04T17:47:09.308161Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:47:09.357920Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:47:09.358036Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R26    
2023-06-04T17:47:09.358070Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:47:09.468116Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:47:09.468219Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R28    
2023-06-04T17:47:09.468250Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:47:09.539806Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:47:09.539996Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R30    
2023-06-04T17:47:09.540029Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:47:11.214020Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:47:11.214231Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R32    
2023-06-04T17:47:11.214298Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:47:11.326946Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T17:47:11.327114Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R34    
2023-06-04T17:47:11.327164Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:47:11.882093Z  INFO gleamalyzer::server: Saving document
2023-06-04T17:47:14.787309Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R34    
2023-06-04T17:47:14.787416Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R34    
2023-06-04T17:47:14.787540Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R34    
2023-06-04T17:47:14.787615Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T17:47:14.787650Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R34    
2023-06-04T17:47:14.787683Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T17:47:14.787707Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R34    
2023-06-04T17:47:14.787727Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R34    
2023-06-04T17:47:18.251230Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R34    
2023-06-04T17:47:18.251331Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R34    
2023-06-04T17:47:18.251446Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R34    
2023-06-04T17:47:18.251474Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R34    
2023-06-04T17:47:22.001930Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R34    
2023-06-04T17:47:22.002005Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R34    
2023-06-04T17:47:22.002121Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R34    
2023-06-04T17:47:22.002147Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R34    
2023-06-04T17:47:26.202075Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R34    
2023-06-04T17:47:26.202208Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R34    
2023-06-04T17:47:26.202319Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R34    
2023-06-04T17:47:26.202344Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R34    
2023-06-04T17:48:22.985328Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R34    
2023-06-04T17:48:22.986253Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R34    
2023-06-04T17:48:22.986438Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R34    
2023-06-04T17:48:22.986490Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R34    
2023-06-04T17:48:35.262815Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":89653,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T17:48:35.264373Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T17:48:35.265788Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T17:48:35.266206Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T17:51:14.809318Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T17:51:14.810340Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:51:14.811887Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T17:51:14.811987Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T17:51:14.812020Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T17:51:14.812049Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T17:51:14.812072Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T17:51:14.812091Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T17:51:40.402802Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T17:51:40.403711Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T17:51:40.403839Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T17:51:40.403866Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T17:51:45.474007Z ERROR gleamalyzer: Unexpected error: Channel closed
2023-06-04T17:55:53.326381Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":90286,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T17:55:53.328251Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T17:55:53.330091Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T17:55:53.330811Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T17:56:12.953895Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T17:56:12.954396Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:56:12.955851Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T17:56:12.955928Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T17:56:12.955965Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T17:56:12.955997Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T17:56:12.956022Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T17:56:12.956049Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T17:56:32.784575Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T17:56:32.785635Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T17:56:32.785840Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T17:56:32.785873Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T17:56:54.768169Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T17:56:54.769138Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T17:56:54.769329Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T17:56:54.769365Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T17:57:25.918380Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T17:57:25.919261Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T17:57:25.919381Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T17:57:25.919409Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T17:59:11.134977Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":90539,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T17:59:11.136762Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T17:59:11.149402Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T17:59:11.149775Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T17:59:14.279526Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T17:59:14.279728Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T17:59:14.280915Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T17:59:14.280975Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T17:59:14.281006Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T17:59:14.281031Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T17:59:14.281051Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T17:59:14.281069Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:01:25.178684Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":90803,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T18:01:25.181421Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T18:01:25.183967Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T18:01:25.184411Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T18:01:30.084278Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:01:30.084547Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T18:01:30.085949Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:01:30.086018Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T18:01:30.086054Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:01:30.086084Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T18:01:30.086109Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:01:30.086131Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:05:24.433293Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":91118,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T18:05:24.434727Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T18:05:24.436194Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T18:05:24.436585Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T18:05:27.136328Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:05:27.136589Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T18:05:27.138013Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:05:27.138094Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T18:05:27.138135Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:05:27.138169Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T18:05:27.138195Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:05:27.138219Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:05:29.666125Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:05:29.666242Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:05:29.666338Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:05:29.666361Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:05:32.436688Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:05:32.437011Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:05:32.437670Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:05:32.437749Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:09:23.412803Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":92246,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T18:09:23.414260Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T18:09:23.415688Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T18:09:23.416119Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T18:09:26.254736Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:09:26.255046Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T18:09:26.256452Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:09:26.256496Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T18:09:26.256531Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:09:26.256562Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T18:09:26.256586Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:09:26.256609Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:09:26.256996Z  INFO ide::ide::goto_definition: HERERE
2023-06-04T18:10:19.436963Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":92404,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T18:10:19.438453Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T18:10:19.439755Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T18:10:19.440091Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T18:10:21.409643Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:10:21.409854Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T18:10:21.410645Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:10:21.410669Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T18:10:21.410688Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:10:21.410724Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T18:10:21.410737Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:10:21.410749Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:11:37.110422Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":92581,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T18:11:37.111897Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T18:11:37.113234Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T18:11:37.113576Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T18:11:40.034484Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:11:40.035173Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T18:11:40.036638Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:11:40.036681Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T18:11:40.036714Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:11:40.036777Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T18:11:40.036802Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:11:40.036824Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:11:40.037142Z  INFO ide::ide::goto_definition: In if
2023-06-04T18:11:40.037166Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@81..82))
2023-06-04T18:11:40.037186Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 81..82 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T18:12:10.495840Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":92729,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T18:12:10.497944Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T18:12:10.500247Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T18:12:10.500861Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T18:12:28.560740Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":92859,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T18:12:28.562161Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T18:12:28.564371Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T18:12:28.564974Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T18:12:30.742800Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:12:30.743018Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T18:12:30.744117Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:12:30.744144Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T18:12:30.744168Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:12:30.744187Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T18:12:30.744204Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:12:30.744219Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:12:30.744436Z  INFO ide::ide::goto_definition: In if
2023-06-04T18:12:30.744456Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@81..82))
2023-06-04T18:12:30.744471Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 81..82 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T18:12:30.744490Z  INFO ide::ide::goto_definition: ExprId: ModuleSourceMap { expr_map: {AstPtr { raw: SyntaxNodePtr { kind: BLOCK, range: 270..449 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }: Idx::<Expr>(2), AstPtr { raw: SyntaxNodePtr { kind: BLOCK, range: 243..254 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }: Idx::<Expr>(1), AstPtr { raw: SyntaxNodePtr { kind: BLOCK, range: 77..99 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }: Idx::<Expr>(0)}, expr_map_rev: ArenaMap { v: [Some(AstPtr { raw: SyntaxNodePtr { kind: BLOCK, range: 77..99 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }), Some(AstPtr { raw: SyntaxNodePtr { kind: BLOCK, range: 243..254 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }), Some(AstPtr { raw: SyntaxNodePtr { kind: BLOCK, range: 270..449 }, _ty: PhantomData<fn() -> syntax::ast::Expr> })], _ty: PhantomData<la_arena::Idx<ide::def::module::Expr>> }, fn_map: {AstPtr { raw: SyntaxNodePtr { kind: FUNCTION, range: 256..449 }, _ty: PhantomData<fn() -> syntax::ast::Function> }: Idx::<Function>(2), AstPtr { raw: SyntaxNodePtr { kind: FUNCTION, range: 206..254 }, _ty: PhantomData<fn() -> syntax::ast::Function> }: Idx::<Function>(1), AstPtr { raw: SyntaxNodePtr { kind: FUNCTION, range: 54..99 }, _ty: PhantomData<fn() -> syntax::ast::Function> }: Idx::<Function>(0)}, fn_map_rev: {Idx::<Function>(2): AstPtr { raw: SyntaxNodePtr { kind: FUNCTION, range: 256..449 }, _ty: PhantomData<fn() -> syntax::ast::Function> }, Idx::<Function>(0): AstPtr { raw: SyntaxNodePtr { kind: FUNCTION, range: 54..99 }, _ty: PhantomData<fn() -> syntax::ast::Function> }, Idx::<Function>(1): AstPtr { raw: SyntaxNodePtr { kind: FUNCTION, range: 206..254 }, _ty: PhantomData<fn() -> syntax::ast::Function> }}, name_map: {AstPtr { raw: SyntaxNodePtr { kind: NAME, range: 66..67 }, _ty: PhantomData<fn() -> syntax::ast::Name> }: Idx::<Name>(1), AstPtr { raw: SyntaxNodePtr { kind: NAME, range: 263..267 }, _ty: PhantomData<fn() -> syntax::ast::Name> }: Idx::<Name>(5), AstPtr { raw: SyntaxNodePtr { kind: NAME, range: 228..229 }, _ty: PhantomData<fn() -> syntax::ast::Name> }: Idx::<Name>(4), AstPtr { raw: SyntaxNodePtr { kind: NAME, range: 215..216 }, _ty: PhantomData<fn() -> syntax::ast::Name> }: Idx::<Name>(3), AstPtr { raw: SyntaxNodePtr { kind: NAME, range: 61..65 }, _ty: PhantomData<fn() -> syntax::ast::Name> }: Idx::<Name>(0), AstPtr { raw: SyntaxNodePtr { kind: NAME, range: 209..212 }, _ty: PhantomData<fn() -> syntax::ast::Name> }: Idx::<Name>(2)}, name_map_rev: ArenaMap { v: [Some(AstPtr { raw: SyntaxNodePtr { kind: NAME, range: 61..65 }, _ty: PhantomData<fn() -> syntax::ast::Name> }), Some(AstPtr { raw: SyntaxNodePtr { kind: NAME, range: 66..67 }, _ty: PhantomData<fn() -> syntax::ast::Name> }), Some(AstPtr { raw: SyntaxNodePtr { kind: NAME, range: 209..212 }, _ty: PhantomData<fn() -> syntax::ast::Name> }), Some(AstPtr { raw: SyntaxNodePtr { kind: NAME, range: 215..216 }, _ty: PhantomData<fn() -> syntax::ast::Name> }), Some(AstPtr { raw: SyntaxNodePtr { kind: NAME, range: 228..229 }, _ty: PhantomData<fn() -> syntax::ast::Name> }), Some(AstPtr { raw: SyntaxNodePtr { kind: NAME, range: 263..267 }, _ty: PhantomData<fn() -> syntax::ast::Name> })], _ty: PhantomData<la_arena::Idx<ide::def::module::Name>> } }
2023-06-04T18:18:37.215274Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":93170,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T18:18:37.216904Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T18:18:37.218184Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T18:18:37.218483Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T18:18:40.912882Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:18:40.913139Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T18:18:40.914674Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:18:40.914718Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T18:18:40.914751Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:18:40.914807Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T18:18:40.914831Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:18:40.914853Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:18:40.915163Z  INFO ide::ide::goto_definition: In if
2023-06-04T18:18:40.915187Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@81..82))
2023-06-04T18:18:40.915207Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 81..82 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T18:18:40.915233Z  INFO ide::ide::goto_definition: ExprId: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 270..449,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..254,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
]
2023-06-04T18:22:26.640721Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":93377,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T18:22:26.642024Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T18:22:26.643312Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T18:22:26.643679Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T18:22:28.130352Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:22:28.130705Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T18:22:28.132236Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:22:28.132339Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T18:22:28.132377Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:22:28.132408Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T18:22:28.132433Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:22:28.132452Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:22:28.132780Z  INFO ide::ide::goto_definition: In if
2023-06-04T18:22:28.132806Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@81..82))
2023-06-04T18:22:28.132826Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 81..82 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T18:22:28.132854Z  INFO ide::ide::goto_definition: ExprId: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..254,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 270..449,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
]
2023-06-04T18:22:28.132921Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T18:22:28.132944Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): executing query    
2023-06-04T18:22:28.132963Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:22:28.132979Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:22:28.133011Z  INFO ide::ide::goto_definition: bla: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(0),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..254,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(2),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 256..449,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 3,
        data: [
            Missing,
            Missing,
            Missing,
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-04T18:31:44.993707Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":94822,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T18:31:44.995763Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T18:31:44.998230Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T18:31:44.998645Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T18:31:46.921130Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:31:46.921292Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T18:31:46.921948Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:31:46.921967Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T18:31:46.921983Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:31:46.921994Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T18:31:46.922004Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:31:46.922014Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:31:46.922185Z  INFO ide::ide::goto_definition: In if
2023-06-04T18:31:46.922196Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@81..82))
2023-06-04T18:31:46.922205Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 81..82 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T18:31:46.922218Z  INFO ide::ide::goto_definition: ExprId: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 433..438,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 355..356,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 442..447,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 251..252,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 294..297,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..254,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 270..449,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
]
2023-06-04T18:31:46.922273Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T18:31:46.922284Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): executing query    
2023-06-04T18:31:46.922295Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:31:46.922303Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:31:46.922319Z  INFO ide::ide::goto_definition: bla: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(4),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..254,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(9),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 256..449,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 10,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(5),
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-04T18:31:46.922398Z  INFO ide::ide::goto_definition: ExprId: Idx::<Expr>(0)
2023-06-04T18:31:46.922412Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): invoked at R12    
2023-06-04T18:31:46.922422Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): executing query    
2023-06-04T18:31:46.922432Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T18:31:46.922441Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:31:46.922456Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): invoked at R12    
2023-06-04T18:31:46.922467Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): executing query    
2023-06-04T18:31:46.922476Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T18:31:46.922484Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:33:21.694050Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:33:21.695300Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:33:21.695425Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:33:21.695453Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:33:21.695480Z  INFO ide::ide::goto_definition: In if
2023-06-04T18:33:21.695497Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@81..82))
2023-06-04T18:33:21.695517Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 81..82 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T18:33:21.695545Z  INFO ide::ide::goto_definition: ExprId: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 433..438,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 355..356,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 442..447,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 251..252,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 294..297,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..254,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 270..449,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
]
2023-06-04T18:33:21.695688Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T18:33:21.695711Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:33:21.695732Z  INFO ide::ide::goto_definition: bla: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(4),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..254,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(9),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 256..449,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 10,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(5),
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-04T18:33:21.695901Z  INFO ide::ide::goto_definition: ExprId: Idx::<Expr>(0)
2023-06-04T18:33:21.695923Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): invoked at R12    
2023-06-04T18:33:21.695943Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:35:27.423312Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":95042,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T18:35:27.424722Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T18:35:27.426011Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T18:35:27.426356Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T18:35:29.089478Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:35:29.089825Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T18:35:29.091276Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:35:29.091314Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T18:35:29.091347Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:35:29.091372Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T18:35:29.091395Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:35:29.091417Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:35:29.091790Z  INFO ide::ide::goto_definition: In if
2023-06-04T18:35:29.091814Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@81..82))
2023-06-04T18:35:29.091836Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 81..82 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T18:35:29.091863Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 442..447,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 270..449,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 251..252,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..254,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 355..356,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 294..297,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 433..438,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
]
2023-06-04T18:35:29.091976Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T18:35:29.092002Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): executing query    
2023-06-04T18:35:29.092024Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:35:29.092044Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:35:29.092075Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(4),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..254,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(9),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 256..449,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 10,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(5),
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-04T18:35:29.092239Z  INFO ide::ide::goto_definition: ExprId: Idx::<Expr>(0)
2023-06-04T18:35:29.092268Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): invoked at R12    
2023-06-04T18:35:29.092291Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): executing query    
2023-06-04T18:35:29.092313Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T18:35:29.092332Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:35:29.092365Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): invoked at R12    
2023-06-04T18:35:29.092388Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): executing query    
2023-06-04T18:35:29.092409Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T18:35:29.092428Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:35:29.092506Z  INFO ide::ide::goto_definition: Name_res: NameResolution {
    resolve_map: {},
}
2023-06-04T18:36:33.168983Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":95229,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T18:36:33.170389Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T18:36:33.171713Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T18:36:33.172053Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T18:36:34.388015Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:36:34.388358Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T18:36:34.389847Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:36:34.389900Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T18:36:34.389933Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:36:34.389959Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T18:36:34.389984Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:36:34.390005Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:36:34.390349Z  INFO ide::ide::goto_definition: In if
2023-06-04T18:36:34.390370Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@81..82))
2023-06-04T18:36:34.390388Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 81..82 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T18:36:34.390411Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 294..297,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..254,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 433..438,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 355..356,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 270..449,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 251..252,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 442..447,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
]
2023-06-04T18:36:34.390504Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T18:36:34.390525Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): executing query    
2023-06-04T18:36:34.390543Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:36:34.390559Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:36:34.390587Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(4),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..254,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(9),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 256..449,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 10,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(5),
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-04T18:36:34.390723Z  INFO ide::ide::goto_definition: ExprId: Idx::<Expr>(0)
2023-06-04T18:36:34.390746Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): invoked at R12    
2023-06-04T18:36:34.390765Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): executing query    
2023-06-04T18:36:34.390783Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T18:36:34.390798Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:36:34.390825Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): invoked at R12    
2023-06-04T18:36:34.390844Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): executing query    
2023-06-04T18:36:34.390861Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T18:36:34.390876Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:36:34.390939Z  INFO ide::ide::goto_definition: Name_res: NameResolution {
    resolve_map: {
        Idx::<Expr>(0): None,
        Idx::<Expr>(2): None,
        Idx::<Expr>(3): None,
        Idx::<Expr>(5): None,
        Idx::<Expr>(6): None,
    },
}
2023-06-04T18:36:38.261067Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T18:36:38.261208Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:36:38.261327Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T18:36:38.261357Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:36:38.261383Z  INFO ide::ide::goto_definition: In if
2023-06-04T18:36:38.261401Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@81..82))
2023-06-04T18:36:38.261421Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 81..82 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T18:36:38.261447Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 294..297,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..254,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 433..438,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 355..356,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 270..449,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 251..252,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 442..447,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
]
2023-06-04T18:36:38.261560Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T18:36:38.261583Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:36:38.261603Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(4),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..254,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(9),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 256..449,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 10,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(5),
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-04T18:36:38.261774Z  INFO ide::ide::goto_definition: ExprId: Idx::<Expr>(0)
2023-06-04T18:36:38.261797Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): invoked at R12    
2023-06-04T18:36:38.261817Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T18:36:38.261837Z  INFO ide::ide::goto_definition: Name_res: NameResolution {
    resolve_map: {
        Idx::<Expr>(0): None,
        Idx::<Expr>(2): None,
        Idx::<Expr>(3): None,
        Idx::<Expr>(5): None,
        Idx::<Expr>(6): None,
    },
}
2023-06-04T20:51:43.122874Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":95475,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T20:51:43.124710Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T20:51:43.126417Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T20:51:43.126865Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T20:51:44.789944Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T20:51:44.790134Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T20:51:44.790929Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T20:51:44.790952Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T20:51:44.790969Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T20:51:44.790980Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T20:51:44.790992Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T20:51:44.791002Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T20:51:44.791212Z  INFO ide::ide::goto_definition: In if
2023-06-04T20:51:44.791224Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@81..82))
2023-06-04T20:51:44.791234Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 81..82 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T20:51:44.791247Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 433..438,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 294..297,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 442..447,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 355..356,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 251..252,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..254,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 270..449,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
]
2023-06-04T20:51:44.791308Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T20:51:44.791339Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): executing query    
2023-06-04T20:51:44.791353Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T20:51:44.791363Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T20:51:44.791379Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(4),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..254,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(9),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 256..449,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 10,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(5),
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-04T20:51:44.791468Z  INFO ide::ide::goto_definition: ExprId: Idx::<Expr>(0)
2023-06-04T20:51:44.791483Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): invoked at R12    
2023-06-04T20:51:44.791494Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): executing query    
2023-06-04T20:51:44.791504Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T20:51:44.791512Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T20:51:44.791529Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): invoked at R12    
2023-06-04T20:51:44.791540Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): executing query    
2023-06-04T20:51:44.791550Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T20:51:44.791558Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T20:51:44.791589Z  INFO ide::def::nameres: ModuleScope { scopes: Arena { len: 3, data: [ScopeData { parent: None, kind: Definitions({"test": Idx::<Name>(5), "bla": Idx::<Name>(2), "main": Idx::<Name>(0)}) }, ScopeData { parent: Some(Idx::<ScopeData>(0)), kind: Definitions({"a": Idx::<Name>(1)}) }, ScopeData { parent: Some(Idx::<ScopeData>(0)), kind: Definitions({"a": Idx::<Name>(3), "d": Idx::<Name>(4)}) }] }, scope_by_expr: ArenaMap { v: [None, Some(Idx::<ScopeData>(1)), None, None, Some(Idx::<ScopeData>(2)), None, None, None, None, Some(Idx::<ScopeData>(0))], _ty: PhantomData<la_arena::Idx<ide::def::module::Expr>> } }
2023-06-04T20:51:44.791628Z  INFO ide::ide::goto_definition: Name_res: NameResolution {
    resolve_map: {
        Idx::<Expr>(3): None,
        Idx::<Expr>(5): None,
        Idx::<Expr>(2): None,
        Idx::<Expr>(6): None,
        Idx::<Expr>(0): None,
    },
}
2023-06-04T20:52:21.498165Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":95612,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T20:52:21.499584Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T20:52:21.501112Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T20:52:21.501515Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T20:52:22.346040Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T20:52:22.346158Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R14    
2023-06-04T20:52:22.346267Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T20:52:23.782976Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T20:52:23.783206Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R16    
2023-06-04T20:52:23.783327Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T20:52:26.001075Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R16    
2023-06-04T20:52:26.001193Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R16    
2023-06-04T20:52:26.001319Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R16    
2023-06-04T20:52:26.001357Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T20:52:26.001392Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R16    
2023-06-04T20:52:26.001419Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T20:52:26.001442Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R16    
2023-06-04T20:52:26.001464Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R16    
2023-06-04T20:52:26.001868Z  INFO ide::ide::goto_definition: In if
2023-06-04T20:52:26.001894Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@81..82))
2023-06-04T20:52:26.001915Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 81..82 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T20:52:26.001943Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..254,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 442..447,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 294..297,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 251..252,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 270..449,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 355..356,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 433..438,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
]
2023-06-04T20:52:26.002066Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R16    
2023-06-04T20:52:26.002093Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): executing query    
2023-06-04T20:52:26.002116Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R16    
2023-06-04T20:52:26.002136Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): returning memoized value changed at R16    
2023-06-04T20:52:26.002171Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(4),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..254,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(9),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 256..449,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 10,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(5),
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-04T20:52:26.002349Z  INFO ide::ide::goto_definition: ExprId: Idx::<Expr>(0)
2023-06-04T20:52:26.002379Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): invoked at R16    
2023-06-04T20:52:26.002404Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): executing query    
2023-06-04T20:52:26.002426Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R16    
2023-06-04T20:52:26.002446Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R16    
2023-06-04T20:52:26.002479Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): invoked at R16    
2023-06-04T20:52:26.002503Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): executing query    
2023-06-04T20:52:26.002524Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R16    
2023-06-04T20:52:26.002543Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R16    
2023-06-04T20:52:26.002601Z  INFO ide::def::nameres: Scopes: ModuleScope { scopes: Arena { len: 3, data: [ScopeData { parent: None, kind: Definitions({"bla": Idx::<Name>(2), "main": Idx::<Name>(0), "test": Idx::<Name>(5)}) }, ScopeData { parent: Some(Idx::<ScopeData>(0)), kind: Definitions({"a": Idx::<Name>(1)}) }, ScopeData { parent: Some(Idx::<ScopeData>(0)), kind: Definitions({"d": Idx::<Name>(4), "a": Idx::<Name>(3)}) }] }, scope_by_expr: ArenaMap { v: [None, Some(Idx::<ScopeData>(1)), None, None, Some(Idx::<ScopeData>(2)), None, None, None, None, Some(Idx::<ScopeData>(0))], _ty: PhantomData<la_arena::Idx<ide::def::module::Expr>> } }
2023-06-04T20:52:26.002672Z  INFO ide::ide::goto_definition: Name_res: NameResolution {
    resolve_map: {
        Idx::<Expr>(0): None,
        Idx::<Expr>(5): None,
        Idx::<Expr>(2): None,
        Idx::<Expr>(6): None,
        Idx::<Expr>(3): None,
    },
}
2023-06-04T20:52:56.770463Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":95750,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T20:52:56.771932Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T20:52:56.774088Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T20:52:56.775182Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T20:52:57.902924Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T20:52:57.903389Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T20:52:57.904482Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T20:52:57.904515Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T20:52:57.904540Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T20:52:57.904559Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T20:52:57.904576Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T20:52:57.904595Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T20:52:57.904864Z  INFO ide::ide::goto_definition: In if
2023-06-04T20:52:57.904880Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@81..82))
2023-06-04T20:52:57.904894Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 81..82 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T20:52:57.904914Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 270..449,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 433..438,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 251..252,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 355..356,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..254,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 294..297,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 442..447,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
]
2023-06-04T20:52:57.904992Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T20:52:57.905035Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): executing query    
2023-06-04T20:52:57.905051Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T20:52:57.905064Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T20:52:57.905087Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(4),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..254,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(9),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 256..449,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 10,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(5),
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-04T20:52:57.905202Z  INFO ide::ide::goto_definition: ExprId: Idx::<Expr>(0)
2023-06-04T20:52:57.905222Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): invoked at R12    
2023-06-04T20:52:57.905238Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): executing query    
2023-06-04T20:52:57.905253Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T20:52:57.905266Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T20:52:57.905289Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): invoked at R12    
2023-06-04T20:52:57.905305Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): executing query    
2023-06-04T20:52:57.905320Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T20:52:57.905333Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T20:52:57.905373Z  INFO ide::def::nameres: Scopes: ModuleScope {
    scopes: Arena {
        len: 3,
        data: [
            ScopeData {
                parent: None,
                kind: Definitions(
                    {
                        "bla": Idx::<Name>(2),
                        "main": Idx::<Name>(0),
                        "test": Idx::<Name>(5),
                    },
                ),
            },
            ScopeData {
                parent: Some(
                    Idx::<ScopeData>(0),
                ),
                kind: Definitions(
                    {
                        "a": Idx::<Name>(1),
                    },
                ),
            },
            ScopeData {
                parent: Some(
                    Idx::<ScopeData>(0),
                ),
                kind: Definitions(
                    {
                        "d": Idx::<Name>(4),
                        "a": Idx::<Name>(3),
                    },
                ),
            },
        ],
    },
    scope_by_expr: ArenaMap {
        v: [
            None,
            Some(
                Idx::<ScopeData>(1),
            ),
            None,
            None,
            Some(
                Idx::<ScopeData>(2),
            ),
            None,
            None,
            None,
            None,
            Some(
                Idx::<ScopeData>(0),
            ),
        ],
        _ty: PhantomData<la_arena::Idx<ide::def::module::Expr>>,
    },
}
2023-06-04T20:52:57.905448Z  INFO ide::ide::goto_definition: Name_res: NameResolution {
    resolve_map: {
        Idx::<Expr>(3): None,
        Idx::<Expr>(2): None,
        Idx::<Expr>(5): None,
        Idx::<Expr>(6): None,
        Idx::<Expr>(0): None,
    },
}
2023-06-04T20:59:09.547044Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T20:59:09.548168Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T20:59:09.548309Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T20:59:09.548339Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T20:59:09.548366Z  INFO ide::ide::goto_definition: In if
2023-06-04T20:59:09.548384Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@81..82))
2023-06-04T20:59:09.548404Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 81..82 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T20:59:09.548431Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 270..449,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 433..438,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 251..252,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 355..356,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..254,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 294..297,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 442..447,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
]
2023-06-04T20:59:09.548588Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T20:59:09.548611Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T20:59:09.548631Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(4),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..254,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(9),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 256..449,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 10,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(5),
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-04T20:59:09.548794Z  INFO ide::ide::goto_definition: ExprId: Idx::<Expr>(0)
2023-06-04T20:59:09.548816Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): invoked at R12    
2023-06-04T20:59:09.548836Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T20:59:09.548855Z  INFO ide::ide::goto_definition: Name_res: NameResolution {
    resolve_map: {
        Idx::<Expr>(3): None,
        Idx::<Expr>(2): None,
        Idx::<Expr>(5): None,
        Idx::<Expr>(6): None,
        Idx::<Expr>(0): None,
    },
}
2023-06-04T21:04:47.938501Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":95938,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T21:04:47.939786Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T21:04:47.941254Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T21:04:47.941669Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T21:04:50.105706Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T21:04:50.106105Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T21:04:50.107667Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T21:04:50.107727Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T21:04:50.107765Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T21:04:50.107794Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T21:04:50.107818Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T21:04:50.107840Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T21:04:50.108233Z  INFO ide::ide::goto_definition: In if
2023-06-04T21:04:50.108258Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@81..82))
2023-06-04T21:04:50.108279Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 81..82 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T21:04:50.108308Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 251..252,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 433..438,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 442..447,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..254,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 355..356,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 294..297,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 270..449,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
]
2023-06-04T21:04:50.108424Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T21:04:50.108485Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): executing query    
2023-06-04T21:04:50.108508Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T21:04:50.108529Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T21:04:50.108561Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(4),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..254,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(9),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 256..449,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 10,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(5),
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-04T21:04:50.108735Z  INFO ide::ide::goto_definition: ExprId: Idx::<Expr>(0)
2023-06-04T21:04:50.108764Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): invoked at R12    
2023-06-04T21:04:50.108788Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): executing query    
2023-06-04T21:04:50.108810Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T21:04:50.108953Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T21:04:50.109049Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): invoked at R12    
2023-06-04T21:04:50.109112Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): executing query    
2023-06-04T21:04:50.109142Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T21:04:50.109165Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T21:04:50.109340Z  INFO ide::def::nameres: Scopes: ModuleScope {
    scopes: Arena {
        len: 3,
        data: [
            ScopeData {
                parent: None,
                kind: Definitions(
                    {
                        "test": Idx::<Name>(5),
                        "main": Idx::<Name>(0),
                        "bla": Idx::<Name>(2),
                    },
                ),
            },
            ScopeData {
                parent: Some(
                    Idx::<ScopeData>(0),
                ),
                kind: Definitions(
                    {
                        "a": Idx::<Name>(1),
                    },
                ),
            },
            ScopeData {
                parent: Some(
                    Idx::<ScopeData>(0),
                ),
                kind: Definitions(
                    {
                        "a": Idx::<Name>(3),
                        "d": Idx::<Name>(4),
                    },
                ),
            },
        ],
    },
    scope_by_expr: ArenaMap {
        v: [
            None,
            Some(
                Idx::<ScopeData>(1),
            ),
            None,
            None,
            Some(
                Idx::<ScopeData>(2),
            ),
            None,
            None,
            None,
            None,
            Some(
                Idx::<ScopeData>(0),
            ),
        ],
        _ty: PhantomData<la_arena::Idx<ide::def::module::Expr>>,
    },
}
2023-06-04T21:04:50.109497Z  INFO ide::ide::goto_definition: Name_res: NameResolution {
    resolve_map: {
        Idx::<Expr>(6): None,
        Idx::<Expr>(0): None,
        Idx::<Expr>(2): None,
        Idx::<Expr>(3): None,
        Idx::<Expr>(5): None,
    },
}
2023-06-04T21:12:55.026461Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":96274,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T21:12:55.027852Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T21:12:55.029196Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T21:12:55.029650Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T21:12:58.451281Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T21:12:58.451655Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T21:12:58.453256Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T21:12:58.453320Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T21:12:58.453358Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T21:12:58.453386Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T21:12:58.453411Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T21:12:58.453433Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T21:12:58.453798Z  INFO ide::ide::goto_definition: In if
2023-06-04T21:12:58.453825Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@81..82))
2023-06-04T21:12:58.453845Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 81..82 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T21:12:58.453874Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 270..449,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 355..356,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 442..447,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 294..297,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 433..438,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 251..252,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..254,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
]
2023-06-04T21:12:58.453996Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T21:12:58.454063Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): executing query    
2023-06-04T21:12:58.454088Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T21:12:58.454108Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T21:12:58.454142Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(4),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..254,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(9),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 256..449,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 10,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(5),
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-04T21:12:58.454316Z  INFO ide::ide::goto_definition: ExprId: Idx::<Expr>(0)
2023-06-04T21:12:58.454346Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): invoked at R12    
2023-06-04T21:12:58.454371Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): executing query    
2023-06-04T21:12:58.454394Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T21:12:58.454413Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T21:12:58.454447Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): invoked at R12    
2023-06-04T21:12:58.454470Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): executing query    
2023-06-04T21:12:58.454491Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T21:12:58.454509Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T21:12:58.454569Z  INFO ide::def::nameres: Scopes: ModuleScope {
    scopes: Arena {
        len: 3,
        data: [
            ScopeData {
                parent: None,
                kind: Definitions(
                    {
                        "bla": Idx::<Name>(2),
                        "test": Idx::<Name>(5),
                        "main": Idx::<Name>(0),
                    },
                ),
            },
            ScopeData {
                parent: Some(
                    Idx::<ScopeData>(0),
                ),
                kind: Definitions(
                    {
                        "a": Idx::<Name>(1),
                    },
                ),
            },
            ScopeData {
                parent: Some(
                    Idx::<ScopeData>(0),
                ),
                kind: Definitions(
                    {
                        "a": Idx::<Name>(3),
                        "d": Idx::<Name>(4),
                    },
                ),
            },
        ],
    },
    scope_by_expr: ArenaMap {
        v: [
            Some(
                Idx::<ScopeData>(1),
            ),
            Some(
                Idx::<ScopeData>(1),
            ),
            Some(
                Idx::<ScopeData>(2),
            ),
            Some(
                Idx::<ScopeData>(2),
            ),
            Some(
                Idx::<ScopeData>(2),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
        ],
        _ty: PhantomData<la_arena::Idx<ide::def::module::Expr>>,
    },
}
2023-06-04T21:12:58.454698Z  INFO ide::ide::goto_definition: Name_res: NameResolution {
    resolve_map: {
        Idx::<Expr>(3): None,
        Idx::<Expr>(6): None,
        Idx::<Expr>(0): Some(
            Definition(
                Idx::<Name>(1),
            ),
        ),
        Idx::<Expr>(2): Some(
            Definition(
                Idx::<Name>(3),
            ),
        ),
        Idx::<Expr>(5): None,
    },
}
2023-06-04T21:13:18.251729Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T21:13:18.252476Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T21:13:18.252613Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T21:13:18.252643Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T21:13:18.252717Z  INFO ide::ide::goto_definition: In if
2023-06-04T21:13:18.252743Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@251..252))
2023-06-04T21:13:18.252763Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 251..252 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T21:13:18.252793Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 270..449,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 355..356,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 442..447,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 294..297,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 433..438,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 251..252,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..254,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
]
2023-06-04T21:13:18.252925Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T21:13:18.252947Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T21:13:18.252966Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(4),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..254,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(9),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 256..449,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 10,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(5),
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-04T21:13:18.253132Z  INFO ide::ide::goto_definition: ExprId: Idx::<Expr>(3)
2023-06-04T21:13:18.253154Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): invoked at R12    
2023-06-04T21:13:18.253175Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T21:13:18.253194Z  INFO ide::ide::goto_definition: Name_res: NameResolution {
    resolve_map: {
        Idx::<Expr>(3): None,
        Idx::<Expr>(6): None,
        Idx::<Expr>(0): Some(
            Definition(
                Idx::<Name>(1),
            ),
        ),
        Idx::<Expr>(2): Some(
            Definition(
                Idx::<Name>(3),
            ),
        ),
        Idx::<Expr>(5): None,
    },
}
2023-06-04T21:13:21.267456Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T21:13:21.267579Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T21:13:21.267703Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T21:13:21.267730Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T21:13:21.267757Z  INFO ide::ide::goto_definition: In if
2023-06-04T21:13:21.267775Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@247..248))
2023-06-04T21:13:21.267798Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 247..248 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T21:13:21.267828Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 270..449,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 355..356,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 442..447,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 294..297,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 433..438,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 251..252,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..254,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
]
2023-06-04T21:13:21.268123Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T21:13:21.268161Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T21:13:21.268185Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(4),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..254,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(9),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 256..449,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 10,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(5),
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-04T21:13:21.268647Z  INFO ide::ide::goto_definition: ExprId: Idx::<Expr>(2)
2023-06-04T21:13:21.268885Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): invoked at R12    
2023-06-04T21:13:21.268922Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T21:13:21.268948Z  INFO ide::ide::goto_definition: Name_res: NameResolution {
    resolve_map: {
        Idx::<Expr>(3): None,
        Idx::<Expr>(6): None,
        Idx::<Expr>(0): Some(
            Definition(
                Idx::<Name>(1),
            ),
        ),
        Idx::<Expr>(2): Some(
            Definition(
                Idx::<Name>(3),
            ),
        ),
        Idx::<Expr>(5): None,
    },
}
2023-06-04T21:13:29.541911Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T21:13:29.542126Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R14    
2023-06-04T21:13:29.542190Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T21:13:29.768026Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T21:13:29.768202Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R16    
2023-06-04T21:13:29.768271Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T21:13:29.862154Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T21:13:29.862287Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R18    
2023-06-04T21:13:29.862327Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T21:13:29.967217Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T21:13:29.967360Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R20    
2023-06-04T21:13:29.967408Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T21:13:30.080691Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T21:13:30.080827Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R22    
2023-06-04T21:13:30.080872Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T21:13:31.638411Z  INFO gleamalyzer::server: Saving document
2023-06-04T21:13:33.837411Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R22    
2023-06-04T21:13:33.837583Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R22    
2023-06-04T21:13:33.837820Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R22    
2023-06-04T21:13:33.837925Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T21:13:33.837954Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R22    
2023-06-04T21:13:33.837977Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R22    
2023-06-04T21:13:33.838366Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T21:13:33.838401Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R22    
2023-06-04T21:13:33.838422Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): returning memoized value changed at R22    
2023-06-04T21:13:33.838470Z  INFO ide::ide::goto_definition: In if
2023-06-04T21:13:33.838489Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@251..255))
2023-06-04T21:13:33.838507Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 251..255 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T21:13:33.838529Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 258..259,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 440..445,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..261,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 251..255,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 449..454,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 277..456,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(10),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 362..363,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 301..304,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
]
2023-06-04T21:13:33.838644Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R22    
2023-06-04T21:13:33.838673Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): executing query    
2023-06-04T21:13:33.838694Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R22    
2023-06-04T21:13:33.838774Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): returning memoized value changed at R22    
2023-06-04T21:13:33.838966Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(5),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..261,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(10),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 263..456,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 11,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "main",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                    Idx::<Expr>(4),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                    Idx::<Expr>(9),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-04T21:13:33.839431Z  INFO ide::ide::goto_definition: ExprId: Idx::<Expr>(3)
2023-06-04T21:13:33.839460Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): invoked at R22    
2023-06-04T21:13:33.839496Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): executing query    
2023-06-04T21:13:33.839522Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R22    
2023-06-04T21:13:33.839546Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R22    
2023-06-04T21:13:33.839576Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): invoked at R22    
2023-06-04T21:13:33.839606Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): executing query    
2023-06-04T21:13:33.839630Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R22    
2023-06-04T21:13:33.839652Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R22    
2023-06-04T21:13:33.839741Z  INFO ide::def::nameres: Scopes: ModuleScope {
    scopes: Arena {
        len: 3,
        data: [
            ScopeData {
                parent: None,
                kind: Definitions(
                    {
                        "test": Idx::<Name>(5),
                        "bla": Idx::<Name>(2),
                        "main": Idx::<Name>(0),
                    },
                ),
            },
            ScopeData {
                parent: Some(
                    Idx::<ScopeData>(0),
                ),
                kind: Definitions(
                    {
                        "a": Idx::<Name>(1),
                    },
                ),
            },
            ScopeData {
                parent: Some(
                    Idx::<ScopeData>(0),
                ),
                kind: Definitions(
                    {
                        "a": Idx::<Name>(3),
                        "d": Idx::<Name>(4),
                    },
                ),
            },
        ],
    },
    scope_by_expr: ArenaMap {
        v: [
            Some(
                Idx::<ScopeData>(1),
            ),
            Some(
                Idx::<ScopeData>(1),
            ),
            Some(
                Idx::<ScopeData>(2),
            ),
            Some(
                Idx::<ScopeData>(2),
            ),
            Some(
                Idx::<ScopeData>(2),
            ),
            Some(
                Idx::<ScopeData>(2),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
        ],
        _ty: PhantomData<la_arena::Idx<ide::def::module::Expr>>,
    },
}
2023-06-04T21:13:33.839894Z  INFO ide::ide::goto_definition: Name_res: NameResolution {
    resolve_map: {
        Idx::<Expr>(3): Some(
            Definition(
                Idx::<Name>(0),
            ),
        ),
        Idx::<Expr>(0): Some(
            Definition(
                Idx::<Name>(1),
            ),
        ),
        Idx::<Expr>(6): None,
        Idx::<Expr>(2): Some(
            Definition(
                Idx::<Name>(3),
            ),
        ),
        Idx::<Expr>(4): None,
        Idx::<Expr>(7): None,
    },
}
2023-06-04T21:13:38.766725Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R22    
2023-06-04T21:13:38.767236Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R22    
2023-06-04T21:13:38.767367Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R22    
2023-06-04T21:13:38.767396Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R22    
2023-06-04T21:13:38.767423Z  INFO ide::ide::goto_definition: In if
2023-06-04T21:13:38.767441Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@251..255))
2023-06-04T21:13:38.767461Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 251..255 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T21:13:38.767486Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 258..259,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 440..445,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..261,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 251..255,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 449..454,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 277..456,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(10),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 362..363,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 301..304,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
]
2023-06-04T21:13:38.767597Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R22    
2023-06-04T21:13:38.767619Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R22    
2023-06-04T21:13:38.767638Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(5),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..261,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(10),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 263..456,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 11,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "main",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                    Idx::<Expr>(4),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                    Idx::<Expr>(9),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-04T21:13:38.767811Z  INFO ide::ide::goto_definition: ExprId: Idx::<Expr>(3)
2023-06-04T21:13:38.767833Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): invoked at R22    
2023-06-04T21:13:38.767854Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): returning memoized value changed at R22    
2023-06-04T21:13:38.767873Z  INFO ide::ide::goto_definition: Name_res: NameResolution {
    resolve_map: {
        Idx::<Expr>(3): Some(
            Definition(
                Idx::<Name>(0),
            ),
        ),
        Idx::<Expr>(0): Some(
            Definition(
                Idx::<Name>(1),
            ),
        ),
        Idx::<Expr>(6): None,
        Idx::<Expr>(2): Some(
            Definition(
                Idx::<Name>(3),
            ),
        ),
        Idx::<Expr>(4): None,
        Idx::<Expr>(7): None,
    },
}
2023-06-04T21:13:42.386513Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R22    
2023-06-04T21:13:42.386637Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R22    
2023-06-04T21:13:42.386758Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R22    
2023-06-04T21:13:42.386787Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R22    
2023-06-04T21:13:42.386812Z  INFO ide::ide::goto_definition: In if
2023-06-04T21:13:42.386829Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@81..82))
2023-06-04T21:13:42.386850Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 81..82 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T21:13:42.386874Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 258..259,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 440..445,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..261,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 251..255,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 449..454,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 277..456,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(10),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 362..363,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 301..304,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
]
2023-06-04T21:13:42.386989Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R22    
2023-06-04T21:13:42.387011Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R22    
2023-06-04T21:13:42.387029Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(5),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..261,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(10),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 263..456,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 11,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "main",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                    Idx::<Expr>(4),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                    Idx::<Expr>(9),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-04T21:13:42.387203Z  INFO ide::ide::goto_definition: ExprId: Idx::<Expr>(0)
2023-06-04T21:13:42.387226Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): invoked at R22    
2023-06-04T21:13:42.387246Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): returning memoized value changed at R22    
2023-06-04T21:13:42.387265Z  INFO ide::ide::goto_definition: Name_res: NameResolution {
    resolve_map: {
        Idx::<Expr>(3): Some(
            Definition(
                Idx::<Name>(0),
            ),
        ),
        Idx::<Expr>(0): Some(
            Definition(
                Idx::<Name>(1),
            ),
        ),
        Idx::<Expr>(6): None,
        Idx::<Expr>(2): Some(
            Definition(
                Idx::<Name>(3),
            ),
        ),
        Idx::<Expr>(4): None,
        Idx::<Expr>(7): None,
    },
}
2023-06-04T21:14:41.136202Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":96530,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-04T21:14:41.138022Z  INFO gleamalyzer::server: Started 8 workers
2023-06-04T21:14:41.139720Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-04T21:14:41.140133Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-04T21:14:42.946024Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T21:14:42.946349Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T21:14:42.947802Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T21:14:42.947844Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T21:14:42.947873Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T21:14:42.947895Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T21:14:42.947915Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-04T21:14:42.947933Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T21:14:42.948310Z  INFO ide::ide::goto_definition: In if
2023-06-04T21:14:42.948330Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@251..255))
2023-06-04T21:14:42.948347Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 251..255 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T21:14:42.948372Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 258..259,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 301..304,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 277..456,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(10),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 362..363,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 449..454,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 251..255,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..261,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 440..445,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
]
2023-06-04T21:14:42.948491Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T21:14:42.948549Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): executing query    
2023-06-04T21:14:42.948569Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-04T21:14:42.948585Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T21:14:42.948614Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(5),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..261,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(10),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 263..456,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 11,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "main",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                    Idx::<Expr>(4),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                    Idx::<Expr>(9),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-04T21:14:42.948782Z  INFO ide::ide::goto_definition: ExprId: Idx::<Expr>(3)
2023-06-04T21:14:42.948808Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): invoked at R12    
2023-06-04T21:14:42.948828Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): executing query    
2023-06-04T21:14:42.948846Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T21:14:42.948862Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T21:14:42.948891Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): invoked at R12    
2023-06-04T21:14:42.948911Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): executing query    
2023-06-04T21:14:42.948928Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-04T21:14:42.948943Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-04T21:14:42.949000Z  INFO ide::def::nameres: Scopes: ModuleScope {
    scopes: Arena {
        len: 3,
        data: [
            ScopeData {
                parent: None,
                kind: Definitions(
                    {
                        "bla": Idx::<Name>(2),
                        "test": Idx::<Name>(5),
                        "main": Idx::<Name>(0),
                    },
                ),
            },
            ScopeData {
                parent: Some(
                    Idx::<ScopeData>(0),
                ),
                kind: Definitions(
                    {
                        "a": Idx::<Name>(1),
                    },
                ),
            },
            ScopeData {
                parent: Some(
                    Idx::<ScopeData>(0),
                ),
                kind: Definitions(
                    {
                        "d": Idx::<Name>(4),
                        "a": Idx::<Name>(3),
                    },
                ),
            },
        ],
    },
    scope_by_expr: ArenaMap {
        v: [
            Some(
                Idx::<ScopeData>(1),
            ),
            Some(
                Idx::<ScopeData>(1),
            ),
            Some(
                Idx::<ScopeData>(2),
            ),
            Some(
                Idx::<ScopeData>(2),
            ),
            Some(
                Idx::<ScopeData>(2),
            ),
            Some(
                Idx::<ScopeData>(2),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
        ],
        _ty: PhantomData<la_arena::Idx<ide::def::module::Expr>>,
    },
}
2023-06-04T21:14:42.949131Z  INFO ide::ide::goto_definition: Name_res: NameResolution {
    resolve_map: {
        Idx::<Expr>(7): None,
        Idx::<Expr>(2): Some(
            Definition(
                Idx::<Name>(3),
            ),
        ),
        Idx::<Expr>(4): None,
        Idx::<Expr>(3): Some(
            Definition(
                Idx::<Name>(0),
            ),
        ),
        Idx::<Expr>(6): None,
        Idx::<Expr>(0): Some(
            Definition(
                Idx::<Name>(1),
            ),
        ),
    },
}
2023-06-04T21:14:53.405579Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T21:14:53.405739Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R14    
2023-06-04T21:14:53.405802Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T21:14:53.563800Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T21:14:53.563913Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R16    
2023-06-04T21:14:53.563951Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T21:14:56.151627Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R16    
2023-06-04T21:14:56.151740Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R14    
2023-06-04T21:14:56.151852Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R16    
2023-06-04T21:14:56.151940Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T21:14:56.151963Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R16    
2023-06-04T21:14:56.151982Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R14    
2023-06-04T21:14:56.152365Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-04T21:14:56.152396Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R16    
2023-06-04T21:14:56.152414Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): returning memoized value changed at R14    
2023-06-04T21:14:56.152459Z  INFO ide::ide::goto_definition: In if
2023-06-04T21:14:56.152474Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@251..255))
2023-06-04T21:14:56.152489Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 251..255 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T21:14:56.152507Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 303..306,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..263,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 260..261,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 279..458,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 442..447,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 451..456,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 364..365,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
]
2023-06-04T21:14:56.152616Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R16    
2023-06-04T21:14:56.152641Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): executing query    
2023-06-04T21:14:56.152660Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R16    
2023-06-04T21:14:56.152676Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): returning memoized value changed at R14    
2023-06-04T21:14:56.152717Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(4),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..263,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(9),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 265..458,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 10,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(5),
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-04T21:15:00.767327Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R16    
2023-06-04T21:15:00.767468Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R14    
2023-06-04T21:15:00.767596Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R16    
2023-06-04T21:15:00.767709Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R14    
2023-06-04T21:15:00.767760Z  INFO ide::ide::goto_definition: In if
2023-06-04T21:15:00.767778Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@251..255))
2023-06-04T21:15:00.767800Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 251..255 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T21:15:00.767830Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 303..306,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..263,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 260..261,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 279..458,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 442..447,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 451..456,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 364..365,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
]
2023-06-04T21:15:00.767963Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R16    
2023-06-04T21:15:00.767987Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R14    
2023-06-04T21:15:00.768007Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(4),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..263,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(9),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 265..458,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 10,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(5),
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-04T21:15:01.955544Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T21:15:01.955745Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R18    
2023-06-04T21:15:01.955826Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T21:15:02.102179Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T21:15:02.102450Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R20    
2023-06-04T21:15:02.102582Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T21:15:03.512679Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T21:15:03.512841Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R22    
2023-06-04T21:15:03.512913Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T21:15:03.671304Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-04T21:15:03.672624Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R24    
2023-06-04T21:15:03.672809Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-04T21:15:04.309585Z  INFO gleamalyzer::server: Saving document
2023-06-04T21:15:06.835781Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R24    
2023-06-04T21:15:06.835890Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R22    
2023-06-04T21:15:06.836018Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R24    
2023-06-04T21:15:06.836074Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-04T21:15:06.836100Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R24    
2023-06-04T21:15:06.836122Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R22    
2023-06-04T21:15:06.836557Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): validated old memoized value    
2023-06-04T21:15:06.836598Z  INFO ide::ide::goto_definition: In if
2023-06-04T21:15:06.836615Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@251..255))
2023-06-04T21:15:06.836633Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 251..255 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-04T21:15:06.836659Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 303..306,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..263,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 260..261,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 279..458,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 442..447,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 451..456,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 364..365,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
]
2023-06-04T21:15:06.836767Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R24    
2023-06-04T21:15:06.836794Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): validated old memoized value    
2023-06-04T21:15:06.836818Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(4),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..263,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(9),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 265..458,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 10,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(5),
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-05T10:11:49.823768Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":96931,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-05T10:11:49.825829Z  INFO gleamalyzer::server: Started 8 workers
2023-06-05T10:11:49.827341Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-05T10:11:49.827722Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-05T10:12:46.870676Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-05T10:12:46.871263Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-05T10:12:46.872748Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-05T10:12:46.872788Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-05T10:12:46.872821Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-05T10:12:46.872846Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-05T10:12:46.872872Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-05T10:12:46.872894Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-05T10:13:02.148901Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R12    
2023-06-05T10:13:02.149851Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R6    
2023-06-05T10:13:02.150021Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R12    
2023-06-05T10:13:02.150052Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-05T10:13:02.150086Z  INFO ide::ide::goto_definition: In if
2023-06-05T10:13:02.150105Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@364..365))
2023-06-05T10:13:02.150127Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 364..365 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-05T10:13:02.150160Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 451..456,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..263,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 279..458,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 303..306,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 260..261,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 364..365,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 442..447,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
]
2023-06-05T10:13:02.150305Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-05T10:13:02.150375Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): executing query    
2023-06-05T10:13:02.150400Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R12    
2023-06-05T10:13:02.150420Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): returning memoized value changed at R6    
2023-06-05T10:13:02.150474Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(4),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..263,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(9),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 265..458,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 10,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(5),
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-05T10:13:02.150646Z  INFO ide::ide::goto_definition: ExprId: Idx::<Expr>(6)
2023-06-05T10:13:02.150676Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): invoked at R12    
2023-06-05T10:13:02.150701Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): executing query    
2023-06-05T10:13:02.150723Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-05T10:13:02.150742Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-05T10:13:02.150776Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): invoked at R12    
2023-06-05T10:13:02.150800Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): executing query    
2023-06-05T10:13:02.150820Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R12    
2023-06-05T10:13:02.150838Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R6    
2023-06-05T10:13:02.150921Z  INFO ide::def::nameres: Scopes: ModuleScope {
    scopes: Arena {
        len: 3,
        data: [
            ScopeData {
                parent: None,
                kind: Definitions(
                    {
                        "test": Idx::<Name>(5),
                        "main": Idx::<Name>(0),
                        "bla": Idx::<Name>(2),
                    },
                ),
            },
            ScopeData {
                parent: Some(
                    Idx::<ScopeData>(0),
                ),
                kind: Definitions(
                    {
                        "a": Idx::<Name>(1),
                    },
                ),
            },
            ScopeData {
                parent: Some(
                    Idx::<ScopeData>(0),
                ),
                kind: Definitions(
                    {
                        "a": Idx::<Name>(3),
                        "d": Idx::<Name>(4),
                    },
                ),
            },
        ],
    },
    scope_by_expr: ArenaMap {
        v: [
            Some(
                Idx::<ScopeData>(1),
            ),
            Some(
                Idx::<ScopeData>(1),
            ),
            Some(
                Idx::<ScopeData>(2),
            ),
            Some(
                Idx::<ScopeData>(2),
            ),
            Some(
                Idx::<ScopeData>(2),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
        ],
        _ty: PhantomData<la_arena::Idx<ide::def::module::Expr>>,
    },
}
2023-06-05T10:13:02.151056Z  INFO ide::ide::goto_definition: Name_res: NameResolution {
    resolve_map: {
        Idx::<Expr>(0): Some(
            Definition(
                Idx::<Name>(1),
            ),
        ),
        Idx::<Expr>(2): Some(
            Definition(
                Idx::<Name>(3),
            ),
        ),
        Idx::<Expr>(5): None,
        Idx::<Expr>(6): None,
        Idx::<Expr>(3): None,
    },
}
2023-06-05T10:13:03.867294Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-05T10:13:03.867471Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R14    
2023-06-05T10:13:03.867529Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-05T10:13:04.088617Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-05T10:13:04.088748Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R16    
2023-06-05T10:13:04.088802Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-05T10:13:07.600318Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R16    
2023-06-05T10:13:07.600437Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R16    
2023-06-05T10:13:07.600568Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R16    
2023-06-05T10:13:07.600658Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-05T10:13:07.600685Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R16    
2023-06-05T10:13:07.600707Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R16    
2023-06-05T10:13:07.601089Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-05T10:13:07.601120Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R16    
2023-06-05T10:13:07.601141Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): returning memoized value changed at R16    
2023-06-05T10:13:07.601219Z  INFO ide::ide::goto_definition: In if
2023-06-05T10:13:07.601238Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@364..365))
2023-06-05T10:13:07.601257Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 364..365 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-05T10:13:07.601278Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 364..365,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 442..447,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 451..456,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 260..261,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..263,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 279..458,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 303..306,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
]
2023-06-05T10:13:07.601384Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R16    
2023-06-05T10:13:07.601412Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): executing query    
2023-06-05T10:13:07.601433Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R16    
2023-06-05T10:13:07.601453Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): returning memoized value changed at R16    
2023-06-05T10:13:07.601499Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(4),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..263,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(9),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 265..458,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 10,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "b",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(5),
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-05T10:13:07.601674Z  INFO ide::ide::goto_definition: ExprId: Idx::<Expr>(6)
2023-06-05T10:13:07.601696Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): invoked at R16    
2023-06-05T10:13:07.601722Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): executing query    
2023-06-05T10:13:07.601743Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R16    
2023-06-05T10:13:07.601762Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R16    
2023-06-05T10:13:07.601788Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): invoked at R16    
2023-06-05T10:13:07.601813Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): executing query    
2023-06-05T10:13:07.601833Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R16    
2023-06-05T10:13:07.601873Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R16    
2023-06-05T10:13:07.601948Z  INFO ide::def::nameres: Scopes: ModuleScope {
    scopes: Arena {
        len: 3,
        data: [
            ScopeData {
                parent: None,
                kind: Definitions(
                    {
                        "test": Idx::<Name>(5),
                        "bla": Idx::<Name>(2),
                        "main": Idx::<Name>(0),
                    },
                ),
            },
            ScopeData {
                parent: Some(
                    Idx::<ScopeData>(0),
                ),
                kind: Definitions(
                    {
                        "a": Idx::<Name>(1),
                    },
                ),
            },
            ScopeData {
                parent: Some(
                    Idx::<ScopeData>(0),
                ),
                kind: Definitions(
                    {
                        "a": Idx::<Name>(3),
                        "d": Idx::<Name>(4),
                    },
                ),
            },
        ],
    },
    scope_by_expr: ArenaMap {
        v: [
            Some(
                Idx::<ScopeData>(1),
            ),
            Some(
                Idx::<ScopeData>(1),
            ),
            Some(
                Idx::<ScopeData>(2),
            ),
            Some(
                Idx::<ScopeData>(2),
            ),
            Some(
                Idx::<ScopeData>(2),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
        ],
        _ty: PhantomData<la_arena::Idx<ide::def::module::Expr>>,
    },
}
2023-06-05T10:13:07.602079Z  INFO ide::ide::goto_definition: Name_res: NameResolution {
    resolve_map: {
        Idx::<Expr>(0): Some(
            Definition(
                Idx::<Name>(1),
            ),
        ),
        Idx::<Expr>(3): None,
        Idx::<Expr>(2): Some(
            Definition(
                Idx::<Name>(3),
            ),
        ),
        Idx::<Expr>(5): None,
        Idx::<Expr>(6): None,
    },
}
2023-06-05T10:13:08.953179Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-05T10:13:08.953441Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R18    
2023-06-05T10:13:08.953534Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-05T10:13:10.838779Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-05T10:13:10.838992Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R20    
2023-06-05T10:13:10.839063Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-05T10:13:11.191983Z  INFO gleamalyzer::server: Saving document
2023-06-05T10:13:18.717628Z ERROR gleamalyzer: Unexpected error: Channel closed
2023-06-05T10:13:20.559020Z  INFO gleamalyzer: Init params: {"capabilities":{"general":{"markdown":{"parser":"marked","version":"1.1.0"},"regularExpressions":{"engine":"ECMAScript","version":"ES2020"}},"textDocument":{"callHierarchy":{"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"dynamicRegistration":true,"honorsChangeAnnotations":false,"isPreferredSupport":true,"resolveSupport":{"properties":["edit"]}},"codeLens":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"completion":{"completionItem":{"commitCharactersSupport":true,"deprecatedSupport":true,"documentationFormat":["markdown","plaintext"],"insertReplaceSupport":true,"insertTextModeSupport":{"valueSet":[1,2]},"preselectSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]},"contextSupport":true,"dynamicRegistration":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"documentHighlight":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"documentSymbol":{"dynamicRegistration":true,"hierarchicalDocumentSymbolSupport":true,"labelSupport":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"foldingRange":{"dynamicRegistration":true,"lineFoldingOnly":true,"rangeLimit":5000},"formatting":{"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"linkedEditingRange":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"publishDiagnostics":{"codeDescriptionSupport":true,"dataSupport":true,"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"versionSupport":false},"rangeFormatting":{"dynamicRegistration":true},"references":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"honorsChangeAnnotations":true,"prepareSupport":true,"prepareSupportDefaultBehavior":1},"selectionRange":{"dynamicRegistration":true},"semanticTokens":{"dynamicRegistration":true,"formats":["relative"],"multilineTokenSupport":false,"overlappingTokenSupport":false,"requests":{"full":{"delta":true},"range":true},"tokenModifiers":["declaration","definition","readonly","static","deprecated","abstract","async","modification","documentation","defaultLibrary"],"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator"]},"signatureHelp":{"contextSupport":true,"dynamicRegistration":true,"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}}},"synchronization":{"didSave":true,"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true}},"window":{"showDocument":{"support":true},"showMessage":{"messageActionItem":{"additionalPropertiesSupport":true}},"workDoneProgress":true},"workspace":{"applyEdit":true,"codeLens":{"refreshSupport":true},"configuration":true,"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"executeCommand":{"dynamicRegistration":true},"fileOperations":{"didCreate":true,"didDelete":true,"didRename":true,"dynamicRegistration":true,"willCreate":true,"willDelete":true,"willRename":true},"semanticTokens":{"refreshSupport":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"tagSupport":{"valueSet":[1]}},"workspaceEdit":{"changeAnnotationSupport":{"groupsOnLabel":true},"documentChanges":true,"failureHandling":"textOnlyTransactional","normalizesLineEndings":true,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"Visual Studio Code","version":"1.78.2"},"locale":"en-gb","processId":97005,"rootPath":"/Users/maurobalbi/Documents/repos/try_gleam","rootUri":"file:///Users/maurobalbi/Documents/repos/try_gleam","trace":"off","workspaceFolders":[{"name":"try_gleam","uri":"file:///Users/maurobalbi/Documents/repos/try_gleam"}]}
2023-06-05T10:13:20.559718Z  INFO gleamalyzer::server: Started 8 workers
2023-06-05T10:13:20.651149Z  INFO gleamalyzer::server: Loading flake configuration
2023-06-05T10:13:20.651656Z  INFO gleamalyzer::server: Workspace is a flake (missing_inputs = false): PackageData { root_file: FileId(1), version: None, display_name: None, dependencies: [], input_store_paths: {} }
2023-06-05T10:13:22.443706Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-05T10:13:22.443877Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R14    
2023-06-05T10:13:22.443942Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-05T10:13:23.245136Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-05T10:13:23.245351Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R16    
2023-06-05T10:13:23.245444Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-05T10:13:23.553283Z  INFO gleamalyzer::server: Updating diagnostics Url { scheme: "file", cannot_be_a_base: false, username: "", password: None, host: None, port: None, path: "/Users/maurobalbi/Documents/repos/try_gleam/src/try_gleam.gleam", query: None, fragment: None }
2023-06-05T10:13:23.553604Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R18    
2023-06-05T10:13:23.553736Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): executing query    
2023-06-05T10:13:27.343905Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R18    
2023-06-05T10:13:27.344015Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R18    
2023-06-05T10:13:27.344158Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R18    
2023-06-05T10:13:27.344190Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): executing query    
2023-06-05T10:13:27.344220Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R18    
2023-06-05T10:13:27.344244Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): executing query    
2023-06-05T10:13:27.344263Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R18    
2023-06-05T10:13:27.344281Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): returning memoized value changed at R18    
2023-06-05T10:13:27.344603Z  INFO ide::ide::goto_definition: In if
2023-06-05T10:13:27.344622Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@294..295))
2023-06-05T10:13:27.344641Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 294..295 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-05T10:13:27.344663Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 364..365,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 451..456,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 260..261,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 279..458,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 442..447,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..263,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 303..306,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
]
2023-06-05T10:13:27.344775Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R18    
2023-06-05T10:13:27.344796Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): executing query    
2023-06-05T10:13:27.344814Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): invoked at R18    
2023-06-05T10:13:27.344831Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): returning memoized value changed at R18    
2023-06-05T10:13:27.344858Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(4),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..263,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(9),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 265..458,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 10,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(5),
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-05T10:13:27.422175Z  INFO gleamalyzer::server: Saving document
2023-06-05T10:13:35.636391Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): invoked at R24    
2023-06-05T10:13:35.636541Z  INFO salsa::derived::slot: ParseQuery(FileId(0)): validated old memoized value    
2023-06-05T10:13:35.636665Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): invoked at R24    
2023-06-05T10:13:35.636721Z  INFO salsa::derived::slot: ModuleWithSourceMapQuery(FileId(0)): validated old memoized value    
2023-06-05T10:13:35.636755Z  INFO salsa::derived::slot: SourceMapQuery(FileId(0)): validated old memoized value    
2023-06-05T10:13:35.636785Z  INFO ide::ide::goto_definition: In if
2023-06-05T10:13:35.636802Z  INFO ide::ide::goto_definition: expr_ptr: NameRef(NameRef(NAME_REF@81..82))
2023-06-05T10:13:35.636821Z  INFO ide::ide::goto_definition: ast_ptr: AstPtr { raw: SyntaxNodePtr { kind: NAME_REF, range: 81..82 }, _ty: PhantomData<fn() -> syntax::ast::Expr> }
2023-06-05T10:13:35.636848Z  INFO ide::ide::goto_definition: Expr_Map: [
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 77..99,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(1),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 247..248,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(2),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 364..365,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(6),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 451..456,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(8),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 81..82,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(0),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 260..261,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(3),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 279..458,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(9),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: LITERAL,
                range: 442..447,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(7),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: BLOCK,
                range: 243..263,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(4),
    ),
    (
        AstPtr {
            raw: SyntaxNodePtr {
                kind: NAME_REF,
                range: 303..306,
            },
            _ty: PhantomData<fn() -> syntax::ast::Expr>,
        },
        Idx::<Expr>(5),
    ),
]
2023-06-05T10:13:35.636964Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R24    
2023-06-05T10:13:35.636991Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): validated old memoized value    
2023-06-05T10:13:35.637015Z  INFO ide::ide::goto_definition: Module: ModuleData {
    functions: Arena {
        len: 3,
        data: [
            Function {
                name: Idx::<Name>(0),
                params: [
                    Param {
                        name: Idx::<Name>(1),
                        label: None,
                    },
                ],
                body: Idx::<Expr>(1),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 54..99,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(2),
                params: [
                    Param {
                        name: Idx::<Name>(3),
                        label: Some(
                            Label(
                                "c",
                            ),
                        ),
                    },
                    Param {
                        name: Idx::<Name>(4),
                        label: Some(
                            Label(
                                "b",
                            ),
                        ),
                    },
                ],
                body: Idx::<Expr>(4),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 206..263,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
            Function {
                name: Idx::<Name>(5),
                params: [],
                body: Idx::<Expr>(9),
                ast_ptr: AstPtr {
                    raw: SyntaxNodePtr {
                        kind: FUNCTION,
                        range: 265..458,
                    },
                    _ty: PhantomData<fn() -> syntax::ast::Function>,
                },
            },
        ],
    },
    params: Arena {
        len: 0,
        data: [],
    },
    exprs: Arena {
        len: 10,
        data: [
            NameRef(
                "a",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(0),
                ],
            },
            NameRef(
                "a",
            ),
            NameRef(
                "c",
            ),
            Block {
                exprs: [
                    Idx::<Expr>(2),
                    Idx::<Expr>(3),
                ],
            },
            NameRef(
                "Int",
            ),
            NameRef(
                "c",
            ),
            Missing,
            Missing,
            Block {
                exprs: [
                    Idx::<Expr>(5),
                    Idx::<Expr>(6),
                    Idx::<Expr>(7),
                    Idx::<Expr>(8),
                ],
            },
        ],
    },
    names: Arena {
        len: 6,
        data: [
            Name {
                text: "main",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "bla",
                kind: Function,
            },
            Name {
                text: "a",
                kind: Param,
            },
            Name {
                text: "d",
                kind: Param,
            },
            Name {
                text: "test",
                kind: Function,
            },
        ],
    },
}
2023-06-05T10:13:35.637188Z  INFO ide::ide::goto_definition: ExprId: Idx::<Expr>(0)
2023-06-05T10:13:35.637225Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): invoked at R24    
2023-06-05T10:13:35.637252Z  INFO salsa::derived::slot: NameResolutionQuery(FileId(0)): executing query    
2023-06-05T10:13:35.637274Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R24    
2023-06-05T10:13:35.637293Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R18    
2023-06-05T10:13:35.637338Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): invoked at R24    
2023-06-05T10:13:35.637367Z  INFO salsa::derived::slot: ScopesQuery(FileId(0)): executing query    
2023-06-05T10:13:35.637387Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): invoked at R24    
2023-06-05T10:13:35.637546Z  INFO salsa::derived::slot: ModuleQuery(FileId(0)): returning memoized value changed at R18    
2023-06-05T10:13:35.637710Z  INFO ide::def::nameres: Scopes: ModuleScope {
    scopes: Arena {
        len: 3,
        data: [
            ScopeData {
                parent: None,
                kind: Definitions(
                    {
                        "bla": Idx::<Name>(2),
                        "test": Idx::<Name>(5),
                        "main": Idx::<Name>(0),
                    },
                ),
            },
            ScopeData {
                parent: Some(
                    Idx::<ScopeData>(0),
                ),
                kind: Definitions(
                    {
                        "a": Idx::<Name>(1),
                    },
                ),
            },
            ScopeData {
                parent: Some(
                    Idx::<ScopeData>(0),
                ),
                kind: Definitions(
                    {
                        "a": Idx::<Name>(3),
                        "d": Idx::<Name>(4),
                    },
                ),
            },
        ],
    },
    scope_by_expr: ArenaMap {
        v: [
            Some(
                Idx::<ScopeData>(1),
            ),
            Some(
                Idx::<ScopeData>(1),
            ),
            Some(
                Idx::<ScopeData>(2),
            ),
            Some(
                Idx::<ScopeData>(2),
            ),
            Some(
                Idx::<ScopeData>(2),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
            Some(
                Idx::<ScopeData>(0),
            ),
        ],
        _ty: PhantomData<la_arena::Idx<ide::def::module::Expr>>,
    },
}
2023-06-05T10:13:35.637893Z  INFO ide::ide::goto_definition: Name_res: NameResolution {
    resolve_map: {
        Idx::<Expr>(0): Some(
            Definition(
                Idx::<Name>(1),
            ),
        ),
        Idx::<Expr>(5): None,
        Idx::<Expr>(3): None,
        Idx::<Expr>(6): None,
        Idx::<Expr>(2): Some(
            Definition(
                Idx::<Name>(3),
            ),
        ),
    },
}
